services:
  postgres:
    image: postgres:15-alpine
    container_name: badminton-postgres-prod
    environment:
      POSTGRES_DB: badminton_bot
      POSTGRES_USER: badminton_user
      POSTGRES_PASSWORD: badminton_secure_password_123
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U badminton_user -d badminton_bot"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: badminton-bot-prod
    environment:
      DATABASE_URL: "postgresql://badminton_user:badminton_secure_password_123@postgres:5432/badminton_bot?schema=public"
      NODE_ENV: production
      PORT: 3100
    env_file:
      - .env
    ports:
      - "3100:3100"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3100/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: badminton-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data_prod:
